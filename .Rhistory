shiny::runApp()
runApp()
?delay
library(shinyjs)
install.packages("shinyjs")
library(shinyjs)
?delay
runApp()
runApp()
chron(times = convertTimeForChron(tmp[2])) %>% as.numeric)*24*60*60*100
chron(times = convertTimeForChron(tmp[2]) %>% as.numeric)*24*60*60*100
convertTimeForChron <- function(time){
add <- '00:00:00'
len <- str_length(time)
add2 <- str_sub(add, 1, 8 - len)
paste0(add2, time) %>% return()
}
chron(times = convertTimeForChron(tmp[2]) %>% as.numeric)*24*60*60*100
chron(times = convertTimeForChron('1:10') %>% as.numeric)*24*60*60*100
chron(times = convertTimeForChron('1:10') %>% as.numeric)
convertTimeForChron('1:10')
chron(time = convertTimeForChron('1:10'))
chron(time = convertTimeForChron('1:10')) %>% as.numeric()
chron(times = convertTimeForChron('1:10')) %>% as.numeric()
chron(times = convertTimeForChron('1:10') %>% as.numeric)
chron(times = convertTimeForChron('1:10')) %>% as.numeric()
chron(times = convertTimeForChron('1:10') %>% as.numeric)
chron(times = convertTimeForChron('1:10')) %>% as.numeric()
(chron(times = convertTimeForChron('1:10')) %>% as.numeric())*24*60*60
(chron(times = convertTimeForChron('1:10')) %>% as.numeric())*24*60*60
(chron(times = convertTimeForChron(tmp[2])) %>% as.numeric)*24*60*60*100
(chron(times = convertTimeForChron('1:10')) %>% as.numeric)*24*60*60*100
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
loadVideoData()
loadVideoData <- function(){
read.csv('videoData.csv') -> data
data
}
loadVideoData()
loadVideoData()[,2]
loadVideoData()[,3]
loadVideoData()[,3] %>% last()
loadVideoData()[,3] %>% unlist()
loadVideoData() %>% str()
loadVideoData()[2,3]
loadVideoData() %>% dim()
loadVideoData()[dim(loadVideoData())[1],3]
runApp()
runApp()
?observeEvent
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
sprintf('www/youtube-dl.exe %s --get-title --get-duration', 'input$URL'https://www.youtube.com/watch?v=E3yGF9PFetQ) %>% system()
sprintf('www/youtube-dl.exe %s --get-title --get-duration', 'https://www.youtube.com/watch?v=E3yGF9PFetQ') %>% system()
sprintf('www/youtube-dl.exe %s --get-title --get-duration', 'https://www.youtube.com/watch?v=E3yGF9PFetQ') %>% system() -> tmp
tmp[2]
sprintf('www/youtube-dl.exe %s --get-title --get-duration', 'https://www.youtube.com/watch?v=E3yGF9PFetQ') %>% system() -> tmp
tmp %>% str()
tmp
(sprintf('www/youtube-dl.exe %s --get-title --get-duration', 'https://www.youtube.com/watch?v=E3yGF9PFetQ') %>% system()) -> tmp
tmp
system((sprintf('www/youtube-dl.exe %s --get-title --get-duration', 'https://www.youtube.com/watch?v=E3yGF9PFetQ')) -> tmp
system(sprintf('www/youtube-dl.exe %s --get-title --get-duration', 'https://www.youtube.com/watch?v=E3yGF9PFetQ')) -> tmp
system(sprintf('www/youtube-dl.exe %s --get-title --get-duration', 'https://www.youtube.com/watch?v=i_cTTgkNdVY')) -> tmp
tmp
system(sprintf('www/youtube-dl.exe %s --get-title --get-duration', 'https://www.youtube.com/watch?v=i_cTTgkNdVY')) -> tmp
system(sprintf('www/youtube-dl.exe %s --get-title --get-duration', 'https://www.youtube.com/watch?v=E3yGF9PFetQ'), intern = TRUE) -> tmp
tmp
tmp[2]
convertTimeForChron(tmp[2])
runApp()
runApp()
runApp()
100 %>% as.hms()
tmp[2]
(chron(times = convertTimeForChron(tmp[2])) %>% as.numeric)
((chron(times = convertTimeForChron(tmp[2])) %>% as.numeric)*24*60*60)
((chron(times = convertTimeForChron(tmp[2])) %>% as.numeric)*24*60*60) %>% as.hms()
((chron(times = convertTimeForChron(tmp[2])) %>% as.numeric)*24*60*60) %>% as.hms() %>% as.string()
((chron(times = convertTimeForChron(tmp[2])) %>% as.numeric)*24*60*60) %>% as.hms() %>% as.character()
1290 %>% as.hms
1290 %>% as.hms %>% chrom
1290 %>% as.hms %>% chron
1290 %>% as.hms %>% as.numeric
1290 %>% as.hms %>% as.numeric %>% chron()
1290 %>% as.hms %>% as.numeric %>% chron(times = .)
1290 %>% as.hms %>% as.numeric %>% chron(seconds = .)
1290 %>% as.hms %>% as.character() %>% chron(seconds = .)
1290 %>% as.hms %>% as.character() %>% chron()
1290 %>% as.hms %>% as.character()
1290 %>% as.hms %>% as.character() %>% chron(times = .)
runApp()
runApp()
